// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
// swift-module-flags: -target arm64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name ModuleRecognition
// swift-module-flags-ignorable: -enable-bare-slash-regex
import CoreLocation
import CoreMotion
import CoreSDK
import Foundation
import ModuleCommons
@_exported import ModuleRecognition
import Swift
import UIKit
import _Concurrency
import _StringProcessing
@_inheritsConvenienceInitializers @objc(RecognitionConnector) final public class RecognitionConnector : ObjectiveC.NSObject {
  @objc(Service) public enum Service : Swift.Int {
    case step = 0
    case activity
    case location
    case analytics
    public init?(rawValue: Swift.Int)
    public typealias RawValue = Swift.Int
    public var rawValue: Swift.Int {
      get
    }
  }
  @objc override dynamic public init()
  @objc deinit
}
extension ModuleRecognition.RecognitionConnector {
  @objc final public func startWellbeingIndicatorsDetection(completionHandler: @escaping (Swift.Bool, Swift.Error?) -> Swift.Void)
  @objc final public func stopWellbeingIndicatorsDetection(completionHandler: @escaping (Swift.Bool, Swift.Error?) -> Swift.Void)
  @objc final public func startStepDetection(completionHandler: @escaping (Swift.Bool, Swift.Error?) -> Swift.Void)
  @objc final public func stopStepDetection(completionHandler: @escaping (Swift.Bool, Swift.Error?) -> Swift.Void)
  @objc final public func startActivityRecognition(completionHandler: @escaping (Swift.Bool, Swift.Error?) -> Swift.Void)
  @objc final public func stopActivityRecognition(completionHandler: @escaping (Swift.Bool, Swift.Error?) -> Swift.Void)
  @objc final public func startLocationTracking(bestAccuracy: Swift.Bool, completionHandler: @escaping (Swift.Bool, Swift.Error?) -> Swift.Void)
  @objc final public func stopLocationTracking(completionHandler: @escaping (Swift.Bool, Swift.Error?) -> Swift.Void)
  @objc final public func isLocationBestAccuracy() -> Swift.Bool
  @objc final public func synchronize(_ service: ModuleRecognition.RecognitionConnector.Service, completionHandler: @escaping (Swift.Bool, Swift.Error?) -> Swift.Void)
  @objc final public func isEnabled(_ service: ModuleRecognition.RecognitionConnector.Service) -> Swift.Bool
}
extension ModuleRecognition.RecognitionConnector : ModuleCommons.CommonsProtocol {}
extension ModuleRecognition.RecognitionConnector.Service : Swift.Equatable {}
extension ModuleRecognition.RecognitionConnector.Service : Swift.Hashable {}
extension ModuleRecognition.RecognitionConnector.Service : Swift.RawRepresentable {}
